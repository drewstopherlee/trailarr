{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trailarr","text":"<p>Trailarr is a Docker application to download and manage trailers for your Radarr, and Sonarr libraries.</p> <p>Github: https://github.com/nandyalu/trailarr/ </p> <p>Docker Hub: https://hub.docker.com/r/nandyalu/trailarr/</p> <p>Documentation: https://nandyalu.github.io/trailarr</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Manages multiple Radarr and Sonarr instances to find media</li> <li>Runs in background like Radarr/Sonarr.</li> <li>Checks if a trailer already exists for movie/series. Download it if set to monitor.</li> <li>Downloads trailer and organizes it in the media folder.</li> <li>Follows plex naming conventions. Works with Plex, Emby, Jellyfin, etc.</li> <li>Downloads trailers for trailer id's set in Radarr/Sonarr.</li> <li>Searches for a trailer if not set in Radarr/Sonarr.</li> <li>Option to download desired video as trailer for any movie/series.</li> <li>Converts audio, video and subtitles to desired formats.</li> <li>Option to remove SponsorBlocks from videos (if any data is available).</li> <li>Beautiful and responsive UI to manage trailers and view details of movies and series.</li> <li>Built with Angular and FastAPI.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>See the Installation guide for detailed instructions on how to install Trailarr.</p>"},{"location":"#setup","title":"Setup","text":"<p>See the Setup guide for detailed instructions on how to setup Trailarr.</p>"},{"location":"#dependencies","title":"Dependencies","text":"<p>Trailarr is built using the following libraries and tools:</p> <ul> <li>Angular</li> <li>Ffmpeg</li> <li>FastAPI</li> <li>Python</li> <li>Yt-dlp</li> </ul>"},{"location":"#support","title":"Support","text":"<p>If you need help, please craete an issue on the GitHub repository or post a question on Reddit.</p>"},{"location":"#issues","title":"Issues","text":"<p>Issues are very valuable to this project.</p> <ul> <li>Ideas are a valuable source of contributions others can make</li> <li>Problems show where this project is lacking</li> <li>With a question, you show where contributors can improve the user experience</li> </ul> <p>Thank you for creating them.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please see the Contributing guide for more information.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the terms of the GPL v3 license. See GPL-3.0 license for more details.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Trailarr","text":"<p>First off, thank you for considering contributing to Trailarr. It's people like you that make Trailarr such a great tool.</p>"},{"location":"CONTRIBUTING/#getting-started","title":"Getting Started","text":"<ul> <li>Fork the repository on GitHub.</li> <li>Clone the project to your own machine.</li> <li>Open the project in Visual Studio Code.</li> <li> <p>Open <code>.devcontainer &gt; devcontainer.json</code> and change the <code>mounts</code> to your desired folders. <pre><code>\"mounts\": [\n        \"source=/var/appdata/trailarr-dev,target=/data,type=bind,consistency=cached\",\n        \"source=/media/all/Media,target=/media,type=bind,consistency=cached\"\n    ],\n</code></pre></p> <p>Note: Below steps are optional, if you don't want to test any changes that would require connecting to <code>Radarr</code> and/or <code>Sonarr</code>, you can simply remove the <code>mounts</code> section from the <code>devcontainer.json</code> file. 1. <code>source</code> is the path on your host machine. 2. <code>target</code> is the path inside the devcontainer. 3. Change the <code>mount</code> for <code>/data</code> to a folder where you want to store the data. Do not use the same folder as your production data. 4. Change the <code>mount</code> for <code>/media</code> to the your media folder mapping as set in <code>Radarr</code> and/or <code>Sonarr</code>.</p> </li> <li> <p>VS Code will automatically detect the devcontainer configuration. Click on <code>Reopen in Container</code>. This will start the build of the Docker container and place you inside it.</p> </li> <li>Make your changes inside the devcontainer. The devcontainer is a fully configured development environment with all the tools you need.</li> <li>Commit changes to your own branch.</li> <li>Push your work back up to your fork.</li> <li>Submit a Pull Request so that we can review your changes.</li> </ul> <p>NOTE: Be sure to merge the latest from \"upstream\" before making a pull request!</p>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code.</p>"},{"location":"CONTRIBUTING/#issue-process","title":"Issue Process","text":"<p>Issues are very valuable to this project.</p> <ul> <li>Ideas are a valuable source of contributions others can make</li> <li>Problems show where this project is lacking</li> <li>With a question, you show where contributors can improve the user experience</li> </ul> <p>Thank you for creating them.</p>"},{"location":"CONTRIBUTING/#pull-request-process","title":"Pull Request Process","text":"<ul> <li>Ensure any install or build dependencies are removed before the end of the layer when doing a build.</li> <li>Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.</li> <li>Increase the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.</li> <li>You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.</li> </ul>"},{"location":"CONTRIBUTING/#code-style","title":"Code Style","text":"<p>To ensure consistency throughout the source code, keep these rules in mind as you are working:</p> <ul> <li>All features or bug fixes must be tested by one or more specs (unit tests).</li> <li>Your code should follow the syntax style of the existing code (PEP-8 for Python code, formatted using black formatter, and the Angular Style Guide for Angular code).</li> </ul>"},{"location":"CONTRIBUTING/#commit-message-guidelines","title":"Commit Message Guidelines","text":"<p>The commit message:</p> <ul> <li>is written in the imperative (e.g., \"Fix ...\", \"Add ...\")</li> <li>is kept short, while concisely explaining what the commit does.</li> <li>is clear about what part of the code is affected -- often by prefixing with the name of the subsystem and a colon, like \"express: ...\" or \"docs: ...\".</li> <li>is a complete sentence, ending with a period.</li> </ul>"},{"location":"CONTRIBUTING/#license","title":"License","text":"<p>By contributing, you agree that your contributions will be licensed under its GPL-3.0 license.</p>"},{"location":"install/docker-cli/","title":"Docker Run","text":"<p>To run the application, you need to have Docker installed on your system.</p>"},{"location":"install/docker-cli/#installation","title":"Installation","text":"<p>To run the application using the Docker CLI, run the following command:</p> <pre><code>docker run -d \\\n    --name=trailarr \\\n    -e TZ=America/New_York \\\n    -e PUID=1000 \\\n    -e PGID=1000 \\\n    -p 7889:7889 \\\n    -v &lt;LOCAL_APPDATA_FOLDER&gt;:/data \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt; \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt; \\\n    --restart unless-stopped \\\n    nandyalu/trailarr:latest\n</code></pre> <p>Open your browser and navigate to http://localhost:7889 to access the application.</p>"},{"location":"install/docker-cli/#updating","title":"Updating","text":"<p>To update the application, run the following commands:</p> <ol> <li> <p>Pull latest image: <pre><code>docker pull nandyalu/trailarr\n</code></pre></p> </li> <li> <p>Stop and remove the existing container: <pre><code>docker stop trailarr &amp;&amp; docker rm trailarr\n</code></pre></p> </li> <li> <p>Finally, run the updated container using the same <code>docker run</code> command used during installation: <pre><code>docker run -d ...\n</code></pre></p> </li> </ol>"},{"location":"install/docker-compose/","title":"Docker Compose","text":"<p>To run the application, you need to have Docker installed on your system.</p>"},{"location":"install/docker-compose/#installation","title":"Installation","text":"<p>Follow the steps below to install the application using Docker Compose.</p> <ol> <li> <p>Create a new directory for the application: <pre><code>mkdir trailarr &amp;&amp; cd trailarr\n</code></pre></p> </li> <li> <p>Create a <code>docker-compose.yml</code> file with the following content: <pre><code>services:\n    trailarr:\n        image: nandyalu/trailarr:latest\n        container_name: trailarr\n        environment:\n            - TZ=America/New_York\n            - PUID=1000\n            - PGID=1000\n        ports:\n            - 7889:7889\n        volumes:\n            - &lt;LOCAL_APPDATA_FOLDER&gt;:/data\n            - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt;\n            - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt;\n        restart: on-failure\n</code></pre></p> </li> <li> <p>Update the env variables and volume mappings in the <code>docker-compose.yml</code> file. See Environment Variables and Volume Mapping for the details.</p> </li> <li> <p>Run the following command to start the application: <pre><code>docker-compose up -d\n</code></pre></p> </li> <li> <p>Open your browser and navigate to http://localhost:7889 to access the application.</p> </li> </ol>"},{"location":"install/docker-compose/#updating","title":"Updating","text":"<p>To update the application, run the following commands:</p> <ol> <li> <p>Pull the latest image: <pre><code>docker-compose pull nandyalu/trailarr\n</code></pre></p> </li> <li> <p>Run the docker compose command to update the existing container: <pre><code>docker-compose up -d\n</code></pre></p> </li> </ol>"},{"location":"install/env-variables/","title":"Environment Variables","text":"<p>Environment variables are OPTIONAL.</p> <p>Here are the optional environment variables you can set:</p>"},{"location":"install/env-variables/#app_data_dir","title":"<code>APP_DATA_DIR</code>","text":"<ul> <li>Default is <code>/data</code>.</li> </ul> <p>This environment variable is used to set the application data directory. If setting this, make sure to map the volume to the same directory.</p> <p>Useful if you want to store the application data in a different directory than the default.</p> <p>For example, if you want to store the application data in <code>/config/abc</code>, you can set the <code>APP_DATA_DIR</code> environment variable like this:</p> <pre><code>    environment:\n        - APP_DATA_DIR=/config/abc\n    volumes:\n        - /var/appdata/trailarr:/config/abc\n</code></pre> <p>Warning</p> <p>If you are setting the <code>APP_DATA_DIR</code> environment variable, make sure to set an absolute path like <code>/data</code> or <code>/config/abc</code>, and map the volume to the same directory.</p> <p>Danger</p> <p>Do not set <code>APP_DATA_DIR</code> to <code>/app</code> or <code>/tmp</code> or any other linux system directory. This could cause the application to not work correctly or data loss.</p>"},{"location":"install/env-variables/#pgid","title":"<code>PGID</code>","text":"<ul> <li>Default is <code>1000</code>.</li> </ul> <p>This environment variable is used to set the group ID for the application.</p> <p>Useful if you have permission issues with the application writing to the volume. You can set the group ID to the group of the volume or a group that has read/write permissions to the volume.</p> <pre><code>    environment:\n        - PGID=1000\n</code></pre>"},{"location":"install/env-variables/#puid","title":"<code>PUID</code>","text":"<ul> <li>Default is <code>1000</code>.</li> </ul> <p>This environment variable is used to set the user ID for the application.</p> <p>Useful if you have permission issues with the application writing to the volume. You can set the user ID to the owner of the volume or a user that has read/write permissions to the volume.</p> <pre><code>    environment:\n        - PUID=1000\n</code></pre>"},{"location":"install/env-variables/#tz","title":"<code>TZ</code>","text":"<ul> <li>Default is <code>America/New_York</code>.</li> </ul> <p>This environment variable is used to set the timezone for the application.</p> <p>For a list of valid timezones, see tz database time zones.</p> <pre><code>    environment:\n        - TZ=America/New_York\n</code></pre>"},{"location":"install/env-variables/#example","title":"Example","text":"<p>Here is an example of setting the environment variables:</p> <pre><code>    environment:\n        - TZ=America/Los_Angeles\n        - PUID=1000\n        - PGID=1000\n        - APP_DATA_DIR=/config\n    volumes:\n        - /var/appdata/trailarr:/config\n</code></pre> <p>This sets the environment variables to run the app with following settings:</p> <ul> <li>Timezone: America/Los_Angeles</li> <li>User ID: 1000</li> <li>Group ID: 1000</li> <li>Application data directory: /config</li> <li>Volume mapping: /var/appdata/trailarr:/config</li> </ul>"},{"location":"install/install/","title":"Install","text":""},{"location":"install/install/#requirements","title":"Requirements","text":"<p>To run this application, you need the following installed on your system:</p> <ul> <li>Docker: https://docs.docker.com/get-docker/</li> <li>Radarr: https://radarr.video/</li> <li>Sonarr: https://sonarr.tv/</li> </ul>"},{"location":"install/install/#configuration","title":"Configuration","text":""},{"location":"install/install/#environment-variables","title":"Environment Variables","text":"<p>See Environment Variables for the list of optional environment variables set for the application.</p>"},{"location":"install/install/#volume-mapping","title":"Volume Mapping","text":"<p>See Volume Mapping for the volume mapping details.</p>"},{"location":"install/install/#installation","title":"Installation","text":""},{"location":"install/install/#docker-compose","title":"Docker Compose","text":"<p>See Docker Compose for the Docker Compose installation instructions.</p>"},{"location":"install/install/#docker-cli","title":"Docker CLI","text":"<p>See Docker CLI for the Docker CLI installation instructions.</p>"},{"location":"install/volume-mapping/","title":"Volume Mapping","text":"<p>Volume mapping is REQUIRED!</p>"},{"location":"install/volume-mapping/#appdata","title":"AppData","text":"<p>Trailarr needs a folder to store the application data. You need to map a local folder to the <code>/data</code> folder in the Trailarr container.</p> <p>Change <code>&lt;LOCAL_APPDATA_FOLDER&gt;</code> to the folder where you want to store the application data.</p> <p>For example, if you want to store the application data in <code>/var/appdata/trailarr</code>, the volume mapping would look like this: <pre><code>    volumes:\n        - /var/appdata/trailarr:/data\n</code></pre></p> <p>Warning</p> <p>If you are setting the <code>APP_DATA_DIR</code> environment variable, make sure to map the volume to the same directory.</p>"},{"location":"install/volume-mapping/#media-folders","title":"Media Folders","text":"<p>Trailarr needs access to the media folders of Radarr and Sonarr to monitor the media files. You need to map the media folders of Radarr and Sonarr to the Trailarr container.</p> <p>Trailarr gets the media folders from the Radarr and Sonarr connections you add. So, you need to map the root folder of Radarr and Sonarr to the Trailarr container in a way that Trailarr can access the media files on the paths provided by Radarr and Sonarr. </p> <p>Some examples are provided below.</p> <p>Tip</p> <p>Make sure the folder paths are correct and the Trailarr has read/write access to the folders.</p>"},{"location":"install/volume-mapping/#radarr","title":"Radarr","text":"<p>If you want to monitor the movies in Radarr, you need to map the root folder of Radarr to the Trailarr container.</p> <p>For example, if you have movies in <code>/mnt/disk1/media/movies</code> on your system, and Radarr has this folder mapped to <code>/media/movies</code> inside the Radarr container, the volume mapping would look like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media/movies:/media/movies\n</code></pre>"},{"location":"install/volume-mapping/#sonarr","title":"Sonarr","text":"<p>If you want to monitor the TV shows in Sonarr, you need to map the root folder of Sonarr to the Trailarr container.</p> <p>For example, if you have TV shows in <code>/mnt/disk1/media/tv</code> on your system, and Sonarr has this folder mapped to <code>/media/tv</code> inside the Sonarr container, the volume mapping would look like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media/tv:/media/tv\n</code></pre>"},{"location":"install/volume-mapping/#examples","title":"Examples","text":""},{"location":"install/volume-mapping/#example-1-different-local-container-folders","title":"Example 1 - Different Local &amp; Container folders","text":"<p>Radarr and Sonarr have different local folders mapped to different folders inside their containers.</p> <p>Radarr has <code>/mnt/disk1/movies</code> mapped to <code>/media/movies</code> and Sonarr has <code>/mnt/disk1/tv</code> mapped to <code>/media/tv</code>, you can map them to Trailarr like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/movies:/media/movies\n        - /mnt/disk1/tv:/media/tv\n</code></pre>"},{"location":"install/volume-mapping/#example-2-same-local-folder-parent-different-container-folders","title":"Example 2 - Same Local folder parent, Different Container folders","text":"<p>Both Radarr and Sonarr have different local folders mapped to the different folders inside their containers.</p> <p>Radarr has <code>/mnt/disk1/media/movies</code> mapped to <code>/media/movies</code> and Sonarr has <code>/mnt/disk1/media/tv</code> mapped to <code>/media/tv</code>. However both mapped local folders are in the same parent folder <code>/mnt/disk1/media</code>. So, you can map the parent folder to Trailarr like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media:/media\n</code></pre> <p>OR, you can map the individual folders to Trailarr like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media/movies:/media/movies\n        - /mnt/disk1/media/tv:/media/tv\n</code></pre>"},{"location":"install/volume-mapping/#example-3-different-local-folders-same-container-folder","title":"Example 3 - Different Local folders, Same Container folder","text":"<p>If you have both Radarr and Sonarr with different local folders mapped to the same folder inside their containers, you can do custom mapping of local folders and set the appropriate path mapping while adding those connections!</p> <p>For example, if Radarr has <code>/mnt/disk1/media/movies</code> mapped to <code>/media</code> and Sonarr has <code>/mnt/disk1/media/tv</code> mapped to <code>/media</code>, you can do custom mapping like below:</p> <ol> <li> <p>Map <code>/mnt/disk1/media</code> to <code>/media</code> in Trailarr like this: <pre><code>    volumes:\n        - /mnt/disk1/media/movies:/media/movies\n        - /mnt/disk1/media/tv:/media/tv\n</code></pre></p> </li> <li> <p>Set the path mapping for Radarr like: </p> </li> </ol> <p>Tip</p> <p>The <code>Path From</code> needs to match root folder inside Radarr (<code>/media</code>), and the <code>Path To</code> needs to match the folder inside Trailarr where the media is mapped (<code>/media/movies</code>).</p> <ol> <li>Set the path mapping for Sonarr like: </li> </ol> <p>Tip</p> <p>The <code>Path From</code> needs to match root folder inside Sonarr (<code>/media</code>), and the <code>Path To</code> needs to match the folder inside Trailarr where the media is mapped (<code>/media/tv</code>).</p>"},{"location":"setup/connections/","title":"Connections","text":""},{"location":"setup/connections/#add-radarrsonarr-connections","title":"Add Radarr/Sonarr Connections","text":"<ol> <li> <p>Navigate to the application in your browser at http://localhost:7889/settings/connections.</p> </li> <li> <p>Go to <code>Settings</code> &gt; <code>Connections</code> and Click the <code>Add New</code> button to add your Radarr and Sonarr instances. </p> </li> <li> <p>Add your Radarr and Sonarr instances. </p> </li> <li> <p>Set the <code>Connection Name</code> to a name of your choice.</p> </li> <li> <p>Set the <code>Type</code> to either <code>Radarr</code> or <code>Sonarr</code>.</p> </li> <li> <p>Set the <code>Monitor Type</code> to your preference. See Monitor Types below for more information.</p> <p>Tip</p> <p>You can set different monitor types for each Radarr/Sonarr instance.</p> </li> <li> <p>Add the <code>URL</code> for your Radarr or Sonarr instance.     Full URL of your Radarr or Sonarr instance including the port number. For example, <code>http://192.168.0.15:6969</code>.</p> </li> <li> <p>Add the <code>API Key</code> from your Radarr or Sonarr instance.     Get <code>API Key</code> by opening Radarr/Sonarr in your browser, going to <code>Settings &gt; General</code>, then copy the API key.</p> </li> <li> <p>If you have a setup that requires <code>Path Mappings</code> to be set as described in Volume Mapping, you can add them here. See Path Mapping below for more information.</p> <p>Tip</p> <p>You can set different path mappings for each Radarr/Sonarr instance.</p> <p>Warning</p> <p>Path mappings are optional and only required if you have a setup that requires them.</p> </li> <li> <p>Click the <code>Save</code> button to save the connection.</p> </li> <li> <p>Repeat the steps for each Radarr and Sonarr instance you want to monitor.</p> </li> <li> <p>That's it! The application will now start downloading trailers for your media library. See settings for more information on how to adjust settings.</p> </li> </ol>"},{"location":"setup/connections/#monitor-types","title":"Monitor Types","text":""},{"location":"setup/connections/#missing","title":"<code>Missing</code>","text":"<p>Monitors and downloads trailers for movies/series without a trailer.</p>"},{"location":"setup/connections/#new","title":"<code>New</code>","text":"<p>Only Monitors and download trailers for movies/series that gets added after the change.</p>"},{"location":"setup/connections/#sync","title":"<code>Sync</code>","text":"<p>Monitors and downloads trailers for movie/series that are monitored in Radarr/Sonarr.</p>"},{"location":"setup/connections/#none","title":"<code>None</code>","text":"<p>Turns off monitoring for the connection and does not download any trailers.</p> <p>Tip</p> <p>If you have a huge library and don't want to download trailers for all of them, set the monitor type to <code>None</code> when adding a Radarr/Sonarr Connection. Wait for an hour or so to let the app sync all media from that connection, and change it to <code>New</code> to download trailers for new media. You can always manually set the monitor type for the movies/series you want to download trailers for.</p>"},{"location":"setup/connections/#path-mapping","title":"Path Mapping","text":"<p>Path mappings are optional and only required if you have a setup that requires them. You can set different path mappings for each Radarr/Sonarr instance.</p> <ol> <li> <p>Click the <code>Add Path Mapping</code> button. </p> </li> <li> <p>Set the <code>Path From</code> to the path inside Radarr/Sonarr connection.</p> </li> <li> <p>Set the <code>Path To</code> to the path inside the Trailarr container. </p> </li> <li> <p>Click the <code>Save</code> button to save the path mapping.</p> </li> <li> <p>Repeat the steps for each path mapping you want to add, if needed.</p> </li> </ol> <p>Tip</p> <p>Path mappings are useful when the media folder available to Radarr/Sonarr is same for multiple connections. For example, if Radarr has media folder set to <code>/media</code> and Sonarr has media folder set to <code>/media</code>, you can map the local folder for Radarr media to <code>/media/movies</code> and Sonarr media to <code>/media/tv</code> and then in add path mappings with <code>Path From</code> set to <code>/media</code> and <code>Path To</code> set to <code>/media/movies</code> for Radarr and <code>/media/tv</code> for Sonarr connections.</p> <p>Warning</p> <p>For Path Mappings to work, you need to set the <code>Path From</code> to the exact path inside Radarr/Sonarr connection and <code>Path To</code> to the exact path inside the Trailarr container. If the paths do not match, the path mapping will not work. Path Mappings needs to be paired with <code>Volume Mapping</code> in the <code>docker-compose.yml</code> file. See Volume Mapping for more information.</p>"},{"location":"setup/settings/","title":"Settings","text":"<p>There are a few settings that you can use to customize the behavior of Trailarr app. These settings can be set by opening the app in browser http://localhost:7889/settings and navigatings  to <code>Settings &gt; Trailer</code> page.</p>"},{"location":"setup/settings/#general-settings","title":"General Settings","text":""},{"location":"setup/settings/#debug-mode","title":"Debug Mode","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable debug mode to display additional information in the logs. This is useful for troubleshooting issues.</p>"},{"location":"setup/settings/#monitor-trailers","title":"Monitor Trailers","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to monitor trailers for connections. When enabled, the app will automatically download trailers for media in Radarr and Sonarr.</p> <p>Note</p> <p>Disabling this will disable monitoring of media for all connections.</p>"},{"location":"setup/settings/#monitor-interval","title":"Monitor Interval","text":"<ul> <li>Default is <code>60</code> minutes. Minimum is <code>10</code> minutes`. </li> </ul> <p>Frequency (in minutes) to check for new media in Radarr/Sonarr.</p>"},{"location":"setup/settings/#file-settings","title":"File Settings","text":""},{"location":"setup/settings/#wait-for-media","title":"Wait For Media","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to wait for media to be downloaded before downloading trailers.</p>"},{"location":"setup/settings/#trailer-folder-movie","title":"Trailer Folder Movie","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to save trailers in a <code>Trailers</code> folder inside the movie folder.</p>"},{"location":"setup/settings/#trailer-folder-series","title":"Trailer Folder Series","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to save trailers in a <code>Trailers</code> folder inside the series folder.</p>"},{"location":"setup/settings/#trailer-settings","title":"Trailer Settings","text":""},{"location":"setup/settings/#trailer-resolution","title":"Trailer Resolution","text":"<ul> <li>Default is <code>1080</code></li> </ul> <p>Select the resolution of the trailers to download. Available options are <code>240</code>, <code>360</code>, <code>480</code>, <code>720</code>, <code>1080</code>, <code>1440</code>, <code>2160</code>.</p> <p>Info</p> <p>If set to <code>1080</code>, the app will try to download trailers with a resolution of 1080p, if available. If not, it will fallback to the next lower resolution.</p>"},{"location":"setup/settings/#trailer-file-format","title":"Trailer File Format","text":"<ul> <li>Default is <code>mkv</code></li> </ul> <p>Select the file format of the trailers to download. Available options are <code>mkv</code>, <code>mp4</code>, <code>webm</code>.</p> <p>Info</p> <p>App will download trailer in the available format and then convert it to the selected format using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-video-format","title":"Trailer Video Format","text":"<ul> <li>Default is <code>h264</code></li> </ul> <p>Select the video codec of the trailers to download. Available options are <code>h264</code>, <code>h265</code>, <code>vp8</code>, <code>vp9</code>, <code>av1</code>.</p> <p>Info</p> <p>App will download trailer in the available codec and then convert it to the selected codec using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-audio-format","title":"Trailer Audio Format","text":"<ul> <li>Default is <code>aac</code></li> </ul> <p>Select the audio codec of the trailers to download. Available options are <code>aac</code>, <code>ac3</code>, <code>eac3</code>, <code>flac</code>, <code>opus</code>.</p> <p>Info</p> <p>App will download trailer in the available codec and then convert it to the selected codec using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-subtitles-enabled","title":"Trailer Subtitles Enabled","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to download subtitles for trailers, if available.</p>"},{"location":"setup/settings/#trailer-subtitles-format","title":"Trailer Subtitles Format","text":"<ul> <li>Default is <code>srt</code></li> </ul> <p>Select the format of the subtitles to download. Available options are <code>srt</code>, <code>vtt</code>, <code>pgs</code>.</p> <p>Info</p> <p>App will download subtitles in the available format and then convert it to the selected format using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-subtitles-language","title":"Trailer Subtitles Language","text":"<ul> <li>Default is <code>en</code></li> </ul> <p>Select the language of the subtitles to download. A valid ISO 639-1 language code is required. See ISO 639-1 language codes for more information.</p> <p>Info</p> <p>Multiple languages can be set with a comma separated list. For example, <code>en,es,fr</code>.</p>"},{"location":"setup/settings/#other-settings","title":"Other Settings","text":""},{"location":"setup/settings/#trailer-embed-metadata","title":"Trailer Embed Metadata","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to embed metadata in the trailers.</p>"},{"location":"setup/settings/#trailer-remove-sponsorblocks","title":"Trailer Remove SponsorBlocks","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to remove sponsor blocks from the trailers, if available. Sponsor blocks are sections of the trailer that contain promotional content like intros, outros, ads, etc.</p>"},{"location":"setup/settings/#trailer-web-optimized","title":"Trailer Web Optimized","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to optimize trailers for web streaming. This will allow trailers to start playing faster while streaming over network. Might slightly increase file size.</p>"},{"location":"setup/settings/#advanced-settings","title":"Advanced Settings","text":""},{"location":"setup/settings/#yt-dlp-cookies-path","title":"Yt-dlp Cookies Path","text":"<ul> <li>Default is <code>None</code></li> </ul> <p>If you are having issues downloading trailers due to age restrictions, bot detection, etc., you can set the path to a file containing YouTube cookies. This will allow the app to use the cookies to bypass restrictions.</p> <p>See yt-dlp documentation for more information on how to get the cookies file.</p> <p>Warning</p> <p>Make sure to save the cookies file in a secure location and map the volume to the container. Set the path to the file in this setting.</p>"}]}